#!/bin/bash
#yellow start 
	YS="\033[1;33m"
#blue start 
	BS="\033[0;34m"
#color end
	CE="\033[0m"
#red start
	RS="\033[1;31m"
#black start
	BLS="\033[0;30m"
#dark gray start
	DGYS="\033[1;30m"
#light blue start
	LBS="\033[1;34m"
#green start
	GNS="\033[0;32m"
#light green start
	LGNS="\033[1;32m"
#cyan start
	CYS="\033[0;36m"
#light cyan start
	LCYS="\033[1;36m"
#light red start
	DRS="\033[0;31m"
#purple start
	PS="\033[0;35m"
#light purple start
	LPS="\033[1;35m"
#brown start
	BRS="\033[0;33m"
#light gray start
	LGYS="\033[0;37m"
#white start
	WHS="\033[1;37m"

if [[ $EUID -ne 0 ]]
then
   sleep 1
   echo -e "["$RS"*"$CE"] "$RS"This script must be run as root!"$CE"" 1>&2
   sleep 1
   exit
fi

clear

CAT="$( cat /etc/ehtools/password )"
if [[ "$CAT" = "" ]]
then
ESENT="create"
else
ESENT="change"
fi
if [[ "$CAT" = "" ]]
then
clear
else
cd /root/ehtools/lib
chmod +x libdec
passcode="$(cat /root/ehtools/etc/.config)"
echo $passcode | ./libdec
logins="$(cat /etc/ehtools/login)"
cd /root/ehtools/lib
chmod +x libenc
passcode="$(cat /root/ehtools/etc/.config)"
echo $passcode | ./libenc
printf '\033]2;Ehtools Authentication\a'
echo -e "$YS"Ehtools Authentication:"$CE"

sleep 0.5
read -e -p $'(\033[4;93mlogin\033[0m\en)> ' loginer

while [ "$loginer" = "root" ]
do
sleep 0.5
cd /root/ehtools/lib
chmod +x libdec
passcode="$(cat /root/ehtools/etc/.config)"
echo $passcode | ./libdec
passroot="$(cat /etc/ehtools/root/password)"
cd /root/ehtools/lib
chmod +x libenc
passcode="$(cat /root/ehtools/etc/.config)"
echo $passcode | ./libenc
read -s -p $'(\033[4;93mpassword\033[0m\en)> ' rootpass

while [ "$rootpass" != "$passroot" ]
do
echo -e
echo -e "["$RS"*"$CE"] "$RS"Wrong password!"$CE""
sleep 3
sleep 0
read -s -p $'(\033[4;93mpassword\033[0m\en)> ' rootpass

done

clear
printf '\033]2;ehtools password changer\a'
sleep 3
echo -e "Do you want to change ehtools root password?(\033[1;33myes\033[0m/\033[1;33mno\033[0m):"
echo -e "So, select 'yes' but do not forget it!"
read -e -p $'(\033[4;93mepasswd\033[0m\en)> ' UORI

if [[ "$UORI" = "no" ]]
then 
	clear
	echo -e "OK..."
	sleep 3
	echo -e "To change ehtools root password, run 'epasswd'"
	sleep 3
	clear
	exit
        
elif [[ "$UORI" = "yes" ]]
then
clear
{
chattr -i /etc/ehtools/root
chattr -i /etc/ehtools/root/password
rm /etc/ehtools/root/password
} &> /dev/null
cd /root/ehtools/lib
chmod +x libdec
passcode="$(cat /root/ehtools/etc/.config)"
echo $passcode | ./libdec
printf '\033]2;ehtools password changer\a'
sleep 3
echo -e "Set ehtools root password!"
echo -e "Ehtools Password Protection:"
sleep 0.5
read -s -p $'(\033[4;93m(new)password\033[0m\en)> ' roots 

echo $roots >> /etc/ehtools/root/password
cd /root/ehtools/lib
chmod +x libenc
passcode="$(cat /root/ehtools/etc/.config)"
echo $passcode | ./libenc
{
chattr +i /etc/ehtools/root
chattr +i /etc/ehtools/root/password
} &> /dev/null
echo -e
echo -e

printf '\033]2;Configuring...\a'

function ProgressBar {

    let _progress=(${1}*100/${2}*100)/100
    let _done=(${_progress}*4)/10
    let _left=40-$_done

    _fill=$(printf "%${_done}s")
    _empty=$(printf "%${_left}s")

                         
        
printf "\rConfiguring: [${_fill// /\#}${_empty// /-}] ${_progress}%%"

}


_start=1

_end=100

for number in $(seq ${_start} ${_end})
do
    sleep 0.2
    ProgressBar ${number} ${_end}
done

echo -e
echo -e

uiecache --all

sleep 5
clear
exit
fi
done


while [ "$loginer" != "$logins" ]
do
echo -e "["$RS"*"$CE"] "$RS"Wrong login!"$CE""
sleep 3
sleep 0
read -e -p $'(\033[4;93mlogin\033[0m\en)> ' loginer

while [ "$loginer" = "root" ]
do
sleep 0.5
cd /root/ehtools/lib
chmod +x libdec
passcode="$(cat /root/ehtools/etc/.config)"
echo $passcode | ./libdec
passroot="$(cat /etc/ehtools/root/password)"
cd /root/ehtools/lib
chmod +x libenc
passcode="$(cat /root/ehtools/etc/.config)"
echo $passcode | ./libenc
read -s -p $'(\033[4;93mpassword\033[0m\en)> ' rootpass

while [ "$rootpass" != "$passroot" ]
do
echo -e
echo -e "["$RS"*"$CE"] "$RS"Wrong password!"$CE""
sleep 3
sleep 0
read -s -p $'(\033[4;93mpassword\033[0m\en)> ' rootpass

done

clear
printf '\033]2;ehtools password changer\a'
sleep 3
echo -e "Do you want to change ehtools root password?(\033[1;33myes\033[0m/\033[1;33mno\033[0m):"
echo -e "So, select 'yes' but do not forget it!"
read -e -p $'(\033[4;93mepasswd\033[0m\en)> ' UORI

if [[ "$UORI" = "no" ]]
then 
	clear
	echo -e "OK..."
	sleep 3
	echo -e "To change ehtools root password, run 'epasswd'"
	sleep 3
	clear
	exit
        
elif [[ "$UORI" = "yes" ]]
then
clear
{
chattr -i /etc/ehtools/root
chattr -i /etc/ehtools/root/password
rm /etc/ehtools/root/password
} &> /dev/null
cd /root/ehtools/lib
chmod +x libdec
passcode="$(cat /root/ehtools/etc/.config)"
echo $passcode | ./libdec
printf '\033]2;ehtools password changer\a'
sleep 3
echo -e "Set ehtools root password!"
echo -e "Ehtools Password Protection:"
sleep 0.5
read -s -p $'(\033[4;93m(new)password\033[0m\en)> ' roots 

echo $roots >> /etc/ehtools/root/password
cd /root/ehtools/lib
chmod +x libenc
passcode="$(cat /root/ehtools/etc/.config)"
echo $passcode | ./libenc
{
chattr +i /etc/ehtools/root
chattr +i /etc/ehtools/root/password
} &> /dev/null
echo -e
echo -e

printf '\033]2;Configuring...\a'

function ProgressBar {

    let _progress=(${1}*100/${2}*100)/100
    let _done=(${_progress}*4)/10
    let _left=40-$_done

    _fill=$(printf "%${_done}s")
    _empty=$(printf "%${_left}s")

                         
        
printf "\rConfiguring: [${_fill// /\#}${_empty// /-}] ${_progress}%%"

}


_start=1

_end=100

for number in $(seq ${_start} ${_end})
do
    sleep 0.2
    ProgressBar ${number} ${_end}
done

echo -e
echo -e

uiecache --all

sleep 5
clear
exit
fi
done
done

sleep 0.5
cd /root/ehtools/lib
chmod +x libdec
passcode="$(cat /root/ehtools/etc/.config)"
echo $passcode | ./libdec
passwords="$(cat /etc/ehtools/password)"
cd /root/ehtools/lib
chmod +x libenc
passcode="$(cat /root/ehtools/etc/.config)"
echo $passcode | ./libenc
read -s -p $'(\033[4;93mpassword\033[0m\en)> ' passworder
while [ "$passworder" != "$passwords" ]
do
echo -e
echo -e "["$RS"*"$CE"] "$RS"Wrong password!"$CE""
sleep 3
sleep 0
read -s -p $'(\033[4;93mpassword\033[0m\en)> ' passworder
sleep 5
done
fi

clear
printf '\033]2;ehtools password changer\a'
sleep 3
echo -e "Do you want to "$ESENT" ehtools login and password?(\033[1;33myes\033[0m/\033[1;33mno\033[0m):"
echo -e "So, select 'yes' but do not forget it!"
read -e -p $'(\033[4;93mepasswd\033[0m\en)> ' UORI

if [[ "$UORI" = "no" ]]
then 
	clear
	echo -e "OK..."
	sleep 3
	echo -e "To "$ESENT" ehtools login and password, run 'epasswd'"
	sleep 3
	clear
	exit
        
elif [[ "$UORI" = "yes" ]]
then
cd /root/ehtools/lib
chmod +x libunchattr
passcode="$(cat /root/ehtools/etc/.config)"
echo $passcode | ./libunchattr
cd /root/ehtools/lib
chmod +x libdec
passcode="$(cat /root/ehtools/etc/.config)"
echo $passcode | ./libdec
{
rm /etc/ehtools/login
rm /etc/ehtools/password
} &> /dev/null
clear
echo -e "Set ehtools login and password!"
echo -e "Ehtools Password Protection:"

sleep 0.5
read -e -p $'(\033[4;93m(new)login\033[0m\en)> ' logins
while [ "$logins" = "root" ]
do
sleep 0.5
echo -e "["$RS"*"$CE"] "$RS"This user is reserved by the ehtools system!"$CE""
sleep 0.5
read -e -p $'(\033[4;93m(new)login\033[0m\en)> ' logins
done

echo $logins >> /etc/ehtools/login

sleep 0.5
read -s -p $'(\033[4;93m(new)password\033[0m\en)> ' passwords

echo $passwords >> /etc/ehtools/password

cd /root/ehtools/lib
chmod +x libenc
passcode="$(cat /root/ehtools/etc/.config)"
echo $passcode | ./libenc

cd /root/ehtools/lib
chmod +x libchattr
passcode="$(cat /root/ehtools/etc/.config)"
echo $passcode | ./libchattr

echo -e
echo -e

printf '\033]2;Configuring...\a'

function ProgressBar {

    let _progress=(${1}*100/${2}*100)/100
    let _done=(${_progress}*4)/10
    let _left=40-$_done

    _fill=$(printf "%${_done}s")
    _empty=$(printf "%${_left}s")

                         
        
printf "\rConfiguring: [${_fill// /\#}${_empty// /-}] ${_progress}%%"

}


_start=1

_end=100

for number in $(seq ${_start} ${_end})
do
    sleep 0.2
    ProgressBar ${number} ${_end}
done

sleep 5
clear
exit
fi
